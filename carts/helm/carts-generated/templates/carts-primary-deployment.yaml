apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  name: carts-primary
spec:
  replicas: 1
  selector:
    matchLabels:
      app: carts-primary
  strategy:
    rollingUpdate:
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: carts-primary
        app.kubernetes.io/component: api
        app.kubernetes.io/instance: carts-canary
        app.kubernetes.io/managed-by: Keptn
        app.kubernetes.io/name: carts-primary
        app.kubernetes.io/part-of: sockshop
        app.kubernetes.io/version: 0.11.2
    spec:
      containers:
      - env:
        - name: JAVA_OPTS
          value: -Xms128m -Xmx512m -XX:PermSize=128m -XX:MaxPermSize=128m -XX:+UseG1GC
            -Djava.security.egd=file:/dev/urandom
        - name: DT_CUSTOM_PROP
          value: version=0.1.0 revision=3 releasename=sockshop-staging-carts keptn_project=sockshop
            keptn_service=carts keptn_stage=staging keptn_deployment=primary
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: DEPLOYMENT_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['deployment']
        - name: CONTAINER_IMAGE
          value: docker.io/keptnexamples/carts:0.11.2
        - name: KEPTN_PROJECT
          value: carts
        - name: KEPTN_STAGE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KEPTN_SERVICE
          value: carts
        - name: UNLEASH_SERVER_URL
          value: http://unleash.unleash-dev/api
        image: docker.io/keptnexamples/carts:0.11.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 15
        name: carts
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 15
        resources: {}
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      volumes:
      - emptyDir:
          medium: Memory
        name: tmp-volume
status: {}
